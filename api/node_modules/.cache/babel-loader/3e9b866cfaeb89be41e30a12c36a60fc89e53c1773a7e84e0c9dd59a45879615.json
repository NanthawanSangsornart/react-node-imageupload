{"ast":null,"code":"const express = require('express');\nconst app = express();\nconst path = require('path');\nconst cors = require('cors');\nconst multer = require('multer');\nconst port = process.env.PORT || 8080;\n// Databse Connection\nconst connection = require('./config/database');\napp.use(cors());\nconst storage = multer.diskStorage({\n  destination: path.join(__dirname, '../public_html/', 'uploads'),\n  filename: function (req, file, cb) {\n    // null as first argument means no error\n    cb(null, Date.now() + '-' + file.originalname);\n  }\n});\napp.post('/imageupload', async (req, res) => {\n  try {\n    // 'avatar' is the name of our file input field in the HTML form\n\n    let upload = multer({\n      storage: storage\n    }).single('avatar');\n    upload(req, res, function (err) {\n      // req.file contains information of uploaded file\n      // req.body contains information of text fields\n\n      if (!req.file) {\n        return res.send('Please select an image to upload');\n      } else if (err instanceof multer.MulterError) {\n        return res.send(err);\n      } else if (err) {\n        return res.send(err);\n      }\n      const classifiedsadd = {\n        image: req.file.filename\n      };\n      const sql = \"INSERT INTO users SET ?\";\n      connection.query(sql, classifiedsadd, (err, results) => {\n        if (err) throw err;\n        res.json({\n          success: 1\n        });\n      });\n    });\n  } catch (err) {\n    console.log(err);\n  }\n});\napp.listen(port, () => console.log(`Example app listening at http://localhost:${port}`));","map":{"version":3,"names":["express","require","app","path","cors","multer","port","process","env","PORT","connection","use","storage","diskStorage","destination","join","__dirname","filename","req","file","cb","Date","now","originalname","post","res","upload","single","err","send","MulterError","classifiedsadd","image","sql","query","results","json","success","console","log","listen"],"sources":["C:/Users/nunth/OneDrive/เดสก์ท็อป/react-node-imageupload/src/index.js"],"sourcesContent":["const express = require('express')\nconst app = express();\nconst path = require('path');\nconst cors = require('cors');\nconst multer = require('multer');\nconst port = process.env.PORT || 8080;\n// Databse Connection\nconst connection = require('./config/database');\n\napp.use(cors());\n\nconst storage = multer.diskStorage({\n    destination: path.join(__dirname, '../public_html/', 'uploads'),\n    filename: function (req, file, cb) {   \n        // null as first argument means no error\n        cb(null, Date.now() + '-' + file.originalname )  \n    }\n})\n\napp.post('/imageupload', async (req, res) => {\t\n    try {\n        // 'avatar' is the name of our file input field in the HTML form\n\n        let upload = multer({ storage: storage}).single('avatar');\n\n        upload(req, res, function(err) {\n            // req.file contains information of uploaded file\n            // req.body contains information of text fields\n\n            if (!req.file) {\n                return res.send('Please select an image to upload');\n            }\n            else if (err instanceof multer.MulterError) {\n                return res.send(err);\n            }\n            else if (err) {\n                return res.send(err);\n            }\n\n            const classifiedsadd = {\n\t\t\t\timage: req.file.filename\n\t\t\t};\n            const sql = \"INSERT INTO users SET ?\";\n            connection.query(sql, classifiedsadd, (err, results) => {  if (err) throw err;\n\t\t\t\tres.json({ success: 1 })      \n\n\t\t\t});  \n\n        }); \n\n    }catch (err) {console.log(err)}\n})\n\napp.listen(port, () => console.log(`Example app listening at http://localhost:${port}`))"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,GAAG,GAAGF,OAAO,EAAE;AACrB,MAAMG,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMG,IAAI,GAAGH,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMI,MAAM,GAAGJ,OAAO,CAAC,QAAQ,CAAC;AAChC,MAAMK,IAAI,GAAGC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI;AACrC;AACA,MAAMC,UAAU,GAAGT,OAAO,CAAC,mBAAmB,CAAC;AAE/CC,GAAG,CAACS,GAAG,CAACP,IAAI,EAAE,CAAC;AAEf,MAAMQ,OAAO,GAAGP,MAAM,CAACQ,WAAW,CAAC;EAC/BC,WAAW,EAAEX,IAAI,CAACY,IAAI,CAACC,SAAS,EAAE,iBAAiB,EAAE,SAAS,CAAC;EAC/DC,QAAQ,EAAE,UAAUC,GAAG,EAAEC,IAAI,EAAEC,EAAE,EAAE;IAC/B;IACAA,EAAE,CAAC,IAAI,EAAEC,IAAI,CAACC,GAAG,EAAE,GAAG,GAAG,GAAGH,IAAI,CAACI,YAAY,CAAE;EACnD;AACJ,CAAC,CAAC;AAEFrB,GAAG,CAACsB,IAAI,CAAC,cAAc,EAAE,OAAON,GAAG,EAAEO,GAAG,KAAK;EACzC,IAAI;IACA;;IAEA,IAAIC,MAAM,GAAGrB,MAAM,CAAC;MAAEO,OAAO,EAAEA;IAAO,CAAC,CAAC,CAACe,MAAM,CAAC,QAAQ,CAAC;IAEzDD,MAAM,CAACR,GAAG,EAAEO,GAAG,EAAE,UAASG,GAAG,EAAE;MAC3B;MACA;;MAEA,IAAI,CAACV,GAAG,CAACC,IAAI,EAAE;QACX,OAAOM,GAAG,CAACI,IAAI,CAAC,kCAAkC,CAAC;MACvD,CAAC,MACI,IAAID,GAAG,YAAYvB,MAAM,CAACyB,WAAW,EAAE;QACxC,OAAOL,GAAG,CAACI,IAAI,CAACD,GAAG,CAAC;MACxB,CAAC,MACI,IAAIA,GAAG,EAAE;QACV,OAAOH,GAAG,CAACI,IAAI,CAACD,GAAG,CAAC;MACxB;MAEA,MAAMG,cAAc,GAAG;QAC/BC,KAAK,EAAEd,GAAG,CAACC,IAAI,CAACF;MACjB,CAAC;MACQ,MAAMgB,GAAG,GAAG,yBAAyB;MACrCvB,UAAU,CAACwB,KAAK,CAACD,GAAG,EAAEF,cAAc,EAAE,CAACH,GAAG,EAAEO,OAAO,KAAK;QAAG,IAAIP,GAAG,EAAE,MAAMA,GAAG;QACrFH,GAAG,CAACW,IAAI,CAAC;UAAEC,OAAO,EAAE;QAAE,CAAC,CAAC;MAEzB,CAAC,CAAC;IAEG,CAAC,CAAC;EAEN,CAAC,QAAOT,GAAG,EAAE;IAACU,OAAO,CAACC,GAAG,CAACX,GAAG,CAAC;EAAA;AAClC,CAAC,CAAC;AAEF1B,GAAG,CAACsC,MAAM,CAAClC,IAAI,EAAE,MAAMgC,OAAO,CAACC,GAAG,CAAE,6CAA4CjC,IAAK,EAAC,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}